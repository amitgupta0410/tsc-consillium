@using System.Web.Mvc.Html;
@model GAPS.TSC.Consillium.Models.AddLeadModel


@{
    ViewBag.Title = "Add New Lead";
}
@{
    Model.StartDate = DateTime.Today;
    Model.ContactedOn = DateTime.Today;
}
<div class="row">
    <div class="col-md-12">
        <h3 class="page-title">
            Add New Lead/Expert
        </h3>
    </div>
</div><hr />
@Html.Partial("_PartialMessage")
<div class="row">
    <div class="col-md-12">
        @using (@Html.BeginForm("AddNewLead", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" })) {
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ResumeId)
            if (Model.Id == 0) {
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.RadioButtonFor(x => x.IsLead, !Model.IsLead) Lead
                        @Html.RadioButtonFor(x => x.IsLead, Model.IsLead) Expert
                    </div>
                </div>
            }
            <div class="col-md-2">
                <div class="form-group">
                    <label><b>Title*</b></label><br>
                    @Html.DropDownListFor(x => x.Title, new SelectList(Model.TitleOptions, "Key", "Value"), new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label><b>Name*</b></label><br />
                    @Html.TextBoxFor(x => x.Name)
                    @Html.ValidationMessageFor(x => x.Name)
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Country*</b></label><br>
                    @Html.DropDownListFor(x => x.CountryId, new SelectList(Model.CountryOptions, "Key", "Value"), "Select Country", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.CountryId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>City*</b></label><br />
                    @Html.TextBoxFor(x => x.City)<br/>
                    @Html.ValidationMessageFor(x => x.City)
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Email*</b></label><br />
                    @Html.TextBoxFor(x => x.Email)<br/>
                    @Html.ValidationMessageFor(x => x.Email)
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Primary Contact No*</b></label>
                    @Html.TextBoxFor(x => x.PrimaryContact)<br/>
                    @Html.ValidationMessageFor(x => x.PrimaryContact)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Secondary Contact No</b></label>
                    @Html.TextBoxFor(x => x.SecondaryContact)<br/>
                    @Html.ValidationMessageFor(x => x.SecondaryContact)
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Contacted On*</b></label>
                    @Html.TextBoxFor(x => x.ContactedOn, new { @class = "form-control date", Value = Model.ContactedOn.ToString("dd MMM yyyy") })
                    @Html.ValidationMessageFor(x => x.ContactedOn)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>LinkedIn</b></label><br />
                    @Html.TextBoxFor(x => x.LinkedInUrl)<br/>
                    @Html.ValidationMessageFor(x => x.LinkedInUrl)
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-2">
                <div class="form-group">
                    <label><b>Honorarium*</b></label>
                    @Html.DropDownListFor(x => x.FeesCurrencyId, new SelectList(Model.CurrencyOptions, "Key", "Value"), "Select Currency", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.FeesCurrencyId)
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <div style="padding-top: 7px"></div>
                    <br>
                    @Html.TextBoxFor(x => x.FeesAmount)
                    @Html.ValidationMessageFor(x => x.FeesAmount)

                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Lead Status*</b></label>
                    @Html.DropDownListFor(x => x.LeadStatus, new SelectList(Model.LeadStatusOptions, "Key", "Value"), "Select Currency", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.LeadStatus)
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-8">
                <div class="form-group">
                    <label><b>Lead Comments</b></label><br />
                    @Html.TextAreaFor(x => x.LeadComments)
                    @Html.ValidationMessageFor(x => x.LeadComments)
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    <label><b>Upload Resume*</b></label><br />
                    <input type="file" name="File" id="resumeFile" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="form-group">
                    @*                <div style="padding-top: 30px"></div><br />*@
                    @if (@Model.ResumeId.HasValue) {
                        <a href="@Model.FileGuidName">@Model.FileName</a>
                    }
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Recruiter*</b></label>
                    @Html.DropDownListFor(x => x.RecruiterId, new SelectList(Model.RecruiterOptions, "Key", "Value"), "Select Recruiter", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.RecruiterId)
                </div>
            </div>


            <div class="clearfix"></div>
            <div class="col-md-6">
                <div class="form-group">
                    <label><b>Job History</b></label> <br />
                    @Html.TextAreaFor(x => x.JobHistory)
                    @Html.ValidationMessageFor(x => x.JobHistory)
                </div>
            </div>

            <div class="clearfix"></div>
            <div class="col-md-6">
                <div class="form-group">
                    <label><b>Source</b></label><br />
                    @Html.TextAreaFor(x => x.Source)
                    @Html.ValidationMessageFor(x => x.Source)

                </div>
            </div>
            <div class="row col-md-6">
                <div class="form-group">
                    <label><b>Expert Type</b></label><br />

                    @Html.DropDownListFor(x => x.ExpertType, new SelectList(Model.ExpertTypeOptions, "Key", "Value"), "Select Type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.ExpertType)
                </div>
            </div>

            <div class="clearfix"></div>
            <div class="col-md-6">
                <div class="form-group">
                    <label><b>Notes</b></label><br />
                    @Html.TextAreaFor(x => x.Notes)
                    @Html.ValidationMessageFor(x => x.Notes)
                </div>
            </div>
            <div class="clearfix"></div>
            if (Model.Id > 0) {
                <div class="col-md-1">
                    <div class="form-group">
                        <div style="padding-top: 9px"></div><br />
                        <a class="btn btn-primary" href="@Url.Action("DeleteLead", "Employees", new {id = @Model.Id})">Delete</a>
                    </div>
                </div>
            }
            <div class="col-md-1">
                <div class="form-group">
                    <div style="padding-top: 9px"></div><br />
                    <input type="submit" class="btn btn-primary" value="Save" style="margin-left: 17px; padding-left: 22px; padding-right: 22px;">
                </div>
            </div>
            if (Model.IsLead && Model.Id > 0) {
                <div class="col-md-1">
                    <div class="form-group">
                        <div style="padding-top: 9px"></div><br/>
                        <a class="btn btn-primary" href="@Url.Action("ConvertLead", "Employees", new {id = @Model.Id})">Convert</a>&nbsp;

                    </div>
                </div>
            }
        }
    </div>
</div>
@if (Model.Id != 0) {
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("AddExperience", "Employees", FormMethod.Post)) {
                @Html.HiddenFor(x => x.Id)
                <div class="col-md-3">
                    <div class="form-group">
                        <label><b>Designation*</b></label><br />
                        @Html.TextBoxFor(x => x.Designation)<br/>
                        @Html.ValidationMessageFor(x=>x.Designation)
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label><b>Organisation*</b></label><br />
                        @Html.TextBoxFor(x => x.Organisation)<br/>
                        @Html.ValidationMessageFor(x=>x.Organisation)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label><b>From*</b></label><br />
                        @Html.TextBoxFor(x => x.StartDate, new { @class = "form-control date" , Value = Model.StartDate.ToString("dd MMM yyyy")})
                        @Html.ValidationMessageFor(x=>x.StartDate)
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label><b>To</b></label><br />
                        @Html.TextBoxFor(x => x.EndDate, new { @class = "form-control date", Value = Model.EndDate.HasValue ? Model.EndDate.Value.ToString("dd MMM yyyy") : string.Empty })
                        @Html.ValidationMessageFor(x=>x.EndDate)
                    </div>
                </div>
                <div class="col-md-1">
                    <div class="form-group">
                        <div style="padding-top: 9px"></div><br />
                        <input type="submit" class="btn btn-primary" value="Save" style="margin-left: 17px; padding-left: 22px; padding-right: 22px;">
                    </div>
                </div>
            }
        </div>
    </div>

    if (Model.WorkExperiences.Any()) {
        <div class="row">
            <div class="col-md-12">
                <div class="table-responsive table-bordered">
                    <table class="table">
                        <tr>
                            <th><label>Designation</label></th>
                            <th><label>Organisation</label></th>
                            <th><label>From</label></th>
                            <th><label>To</label></th>
                        </tr>
                        @foreach (var work in Model.WorkExperiences) {
                            <tr id="work-@work.Id">
                                <td>@work.Designation</td>
                                <td>@work.Organisation</td>
                                <td>@work.StartDate.ToString("dd MMM yyyy")</td>
                                <td>
                                    @if (work.EndDate != null) {
                                        @work.EndDate.Value.ToString("dd MMM yyyy")
                                    }
                                    <span class="pull-right">
                                        <a onclick="EditWork('@work.Id') " title="Edit" style="cursor: pointer; text-decoration: none">
                                            <i class="fa fa-pencil"></i>
                                        </a>&nbsp;
                                        <a onclick="askDeleteWork('@work.Id') " title="Delete" style="cursor: pointer; text-decoration: none">
                                            <i class="fa fa-trash-o"></i>
                                        </a>
                                    </span>
                                </td>
                            </tr>
                        }

                    </table>
                </div>
            </div>
        </div>
    }
}

<div class="modal fade" id="edit-work-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 class="modal-title">Edit Work Experience</h4>
            </div>
            <div class="modal-body">
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

@section scripts{
    <script type="text/javascript">
        function EditWork(workId) {
            $.post('/Employees/EditWork', { id: workId },
                function (data) {
                    $('#edit-work-modal').find('.modal-body').html(data);
                    $.validator.unobtrusive.parse(document);
                });
            $('#edit-work-modal').modal();

        }

        function askDeleteWork(workId) {
            bootbox.confirm("Are you sure you want to delete experience?", function (result) {
                if (result) {
                    $.post('/Employees/Deletework', { id: workId }, function (data) {
                        $('#work-' + workId).remove();
                    });
                }
            });
        }
    </script>
}
