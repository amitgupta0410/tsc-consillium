@model GAPS.TSC.Consillium.Models.ExpertRequestViewModel
@{
    ViewBag.Title = "RequestExpert";
}

<div class="row">
    <div class="col-md-12">
        <h3 class="page-title">
            @if (!Model.IsRequestExpertManual)
            {
               <label><b>Request Expert(ForEN Projects)</b></label> 
            }
            else
            {
                <label><b>Request Manual</b></label> 
            }
        </h3>
    </div>
</div>
@Html.Partial("_PartialMessage")
<hr />
<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("RequestExpert", "Requests", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Client*</b></label>
                    @if (!Model.IsRequestExpertManual)
                    {
                        @Html.DropDownListFor(x => x.ClientId, new SelectList(Model.Clients, "Key", "Value"), "Select Client", new { @class = "form-control", @data_placeholder = "Choose Status" })
                        @Html.ValidationMessageFor(x => x.ClientId)
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.ClientName, new { @class = "form-control ", Value = "" })
                        @Html.ValidationMessageFor(x => x.ClientName)
                    }
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Project*</b></label>
                    @if (!Model.IsRequestExpertManual)
                    {
                        @Html.DropDownListFor(x => x.ProjectId, new List<SelectListItem>(), "Select Project", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProjectId)
                    }
                    else
                    {
                        @Html.TextBoxFor(x => x.ProjectName, new { @class = "form-control ", Value = "" })
                        @Html.ValidationMessageFor(x => x.ProjectName)
                    }
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Bd Lead*</b></label>
                    @if (!Model.IsRequestExpertManual)
                    {
                        @Html.TextBoxFor(x => x.BdLeadId, new { style = "display: none;" })
                        @Html.TextBoxFor(x => x.BdLeadName, new { @class = "form-control ", Value = "", @readonly = "readonly" })

                    }
                    else
                    {
                       @Html.TextBoxFor(x => x.BdLeadName, new { @class = "form-control ", Value = "" })
                       @Html.ValidationMessageFor(x => x.BdLeadName)
                    }
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Project Lead*</b></label>
                    @if (!Model.IsRequestExpertManual)
                    {
                        @Html.DropDownListFor(x => x.ProjectLeadId, new List<SelectListItem>(), new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.ProjectLeadId)
                    }
                    else
                    {
                        @Html.DropDownListFor(x => x.ProjectLeadId, new SelectList(Model.ProjectLeadList, "Key", "Value"), "Select ProjectLead", new { @class = "form-control", @data_placeholder = "Choose Status" })
                        @Html.ValidationMessageFor(x => x.ProjectLeadId)
                    }
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Unit</b></label><br>
                    @Html.DropDownListFor(x => x.UnitId, new SelectList(Model.Units, "Key", "Value"), "Select Unit", new { @class = "form-control", @data_placeholder = "Choose Unit" })
                    @Html.ValidationMessageFor(x => x.UnitId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Industry*</b></label><br>
                    @Html.DropDownListFor(x => x.IndustryId, new SelectList(Model.Industry, "Key", "Value"), "Select Industry", new { @class = "form-control", @data_placeholder = "Choose Status" })
                    @Html.ValidationMessageFor(x => x.IndustryId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Geography*</b></label>
                    @Html.DropDownListFor(x => x.GeographyId, new SelectList(Model.Geography, "Key", "Value"), "Select Geography", new { @class = "form-control", @data_placeholder = "Choose Status" })
                    @Html.ValidationMessageFor(x => x.GeographyId)
                </div>
            </div>
            <div class="col-md-3">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-5">
                            <div class="form-group">
                                <label><b>Budget*</b></label>
                                @Html.TextBoxFor(x => x.BudgetAmount, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.BudgetAmount)
                            </div>
                        </div>
                        <div class="col-md-7">
                            <div class="form-group">
                                <div style="padding-top: 7px"></div>
                                <br>
                                @Html.DropDownListFor(x => x.BudgetCurrencyId, new SelectList(Model.Currency, "Key", "Value"), new { @class = "form-control", @data_placeholder = "Choose Status" })
                                @Html.ValidationMessageFor(x => x.BudgetCurrencyId)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="col-md-3">
                <div class="form-group">
                    <label><b>Cost Borne By*</b></label><br>
                    @Html.DropDownListFor(x => x.CostSharingTypeValue, new SelectList(Model.CostSharingOptions, "Key", "Value", Model.CostSharingOptions.FirstOrDefault()), new { @class = "form-control", @data_placeholder = "Choose Cost" })
                    @Html.ValidationMessageFor(x => x.CostSharingTypeValue)
                </div>
            </div>
            <div class="col-md-3">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label><b>TSC%</b></label>
                                @Html.TextBoxFor(x => x.TscShare, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.TscShare)
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label><b>Client%</b></label>
                                @Html.TextBoxFor(x => x.ClientShare, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ClientShare)
                            </div>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-3">
                <div class="form-group">
                    <label>Upload Scoping Document*</label>
                    @Html.TextBoxFor(x => x.ScopingDocumentFile, new { @class = "form-control", type = "file" })
                    @Html.ValidationMessageFor(x => x.ScopingDocumentFile)
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <label>Upload Approval Document*</label>
                    @Html.TextBoxFor(x => x.ApprovalDocumentFile, new { @class = "form-control", type = "file" })
                    @Html.ValidationMessageFor(x => x.ApprovalDocumentFile)
                </div>
            </div>
            <div class="clearfix"></div>

            <div class="col-md-4">
                <div class="form-group">
                    <label><b>Comments</b></label><br>
                    @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", value = "" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    <label><b>Project Description</b></label>
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", value = "" })
                </div>
            </div>

            <div class="clearfix"></div>
            <div class="col-md-2">
                <div class="form-group">
                    <div style="padding-top: 9px"></div>
                    <br>
                    <input type="submit" value="Send Request" class="btn btn-primary">
                </div>
            </div>
        }
    </div>
</div>

@section scripts{

    <script type="text/javascript">
        $(function () {

            $("#ClientId").change(function () {
                var clientId = $("#ClientId").val();
                if (clientId != "") {
                    $.getJSON("/Requests/GetProjects/" + $("#ClientId").val(), function (data) {
                        var items = "<option value=''>Select Project</option>";
                        $.each(data, function (i, item) {
                            items += "<option value='" + item.Id + "'>" + item.Name + "</option>";
                        });
                        $("#ProjectId").html(items);
                    });

                    $.getJSON("/Requests/GetProjectsBd/" + $("#ClientId").val(), function (bdLead) {
                        if (bdLead != null) {
                            $("#BdLeadName").val(bdLead.FullName);
                            $("#BdLeadId").val(bdLead.Id);
                        }
                    });


                } else {
                    $("#ProjectId").html("<option value=''>Select Project </option>");
                    $("#BdLeadName").val("");
                    $("#BdLeadId").val("");
                    $("#ProjectLeadName").val("");
                    $("#ProjectLeadId").val("");
                }
            });


            $("#ProjectId").change(function () {
                var projectId = $("#ProjectId").val();
                if (projectId != "") {

                    $.getJSON("/Requests/GetProjectLeadList/" + $("#ProjectId").val(), function (data) {
                        var items = "";
                        $.each(data, function (i, item) {
                            if (i == 0) {
                                items += "<option selected='selected' value='" + item.EmployeeId + "'>" + item.FullName + "</option>";

                            } else {
                                items += "<option value='" + item.EmployeeId + "'>" + item.FullName + "</option>";
                            }
                        });
                        $("#ProjectLeadId").html(items);
                    });
                    $.getJSON("/Requests/GetProjectUnit/" + $("#ProjectId").val(), function (unit) {

                        if (unit != null) {
                            $('#UnitId option')
                                .filter(function () { return $.trim($(this).val()) == unit.Id; })
                                .attr('selected', true);
                        }
                    });
                } else {
                    $("#ProjectLeadName").val("");
                    $("#ProjectLeadId").val("");
                    $("#UnitId").html("<option value=''>Select Unit</option>");
                }
            });


            $("#CostSharingTypeValue").change(function () {
                var str = "";
                $("#CostSharingTypeValue option:selected").each(function () {
                    str = $(this).val();
                });
                if (str == 0) {
                    $("#TscShare").val("100");
                    $("#ClientShare").val("0");
                    $("#TscShare").prop("readonly", true);
                    $("#ClientShare").prop("readonly", true);
                } else if (str == 1) {
                    $("#TscShare").val("0");
                    $("#ClientShare").val("100");
                    $("#ClientShare").prop("readonly", true);
                    $("#TscShare").prop("readonly", true);
                } else if (str == 2) {
                    $("#TscShare").val("50");
                    $("#ClientShare").val("50");
                    $("#ClientShare").prop("readonly", false);
                    $("#TscShare").prop("readonly", false);
                } else if (str == 3) {
                    $("#TscShare").val("0");
                    $("#ClientShare").val("0");
                    $("#ClientShare").prop("readonly", true);
                    $("#TscShare").prop("readonly", true);
                }

            });

        });


    </script>
}